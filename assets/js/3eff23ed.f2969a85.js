"use strict";(self.webpackChunkarduinomap=self.webpackChunkarduinomap||[]).push([[185],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var s=i(6540);const o={},t=s.createContext(o);function a(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},8647:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"week-3/functions-and-scope","title":"Functions and Scope","description":"Functions are reusable blocks of code which are fundamental for making your sketches more maintainable and readable. Essentially, a function is a block of code which performs a specific task.","source":"@site/docs/week-3/functions-and-scope.md","sourceDirName":"week-3","slug":"/week-3/functions-and-scope","permalink":"/arduinomap/week-3/functions-and-scope","draft":false,"unlisted":false,"editUrl":"https://github.com/vivanpanda/arduinomap/tree/main/docs/week-3/functions-and-scope.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Week 3","permalink":"/arduinomap/category/week-3"},"next":{"title":"Using Potentiometers","permalink":"/arduinomap/week-3/using-potentiometers"}}');var o=i(4848),t=i(8453);const a={sidebar_position:1},r="Functions and Scope",c={},l=[{value:"Using functions",id:"using-functions",level:2},{value:"Defining a function",id:"defining-a-function",level:3},{value:"Calling a function",id:"calling-a-function",level:3},{value:"Scope",id:"scope",level:2},{value:"Assignment",id:"assignment",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"functions-and-scope",children:"Functions and Scope"})}),"\n",(0,o.jsx)(n.p,{children:"Functions are reusable blocks of code which are fundamental for making your sketches more maintainable and readable. Essentially, a function is a block of code which performs a specific task."}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsxs)(n.p,{children:["You have been using functions all along! The ",(0,o.jsx)(n.code,{children:"setup()"})," and ",(0,o.jsx)(n.code,{children:"loop()"})," commands are functions as well."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"void setup() {\n  // This runs once at the beginning\n}\n\nvoid loop() {\n  // This repeats forever\n}\n"})})]}),"\n",(0,o.jsx)(n.h2,{id:"using-functions",children:"Using functions"}),"\n",(0,o.jsx)(n.p,{children:"We can use functions by defining them using a specific syntax and then calling them as required."}),"\n",(0,o.jsx)(n.h3,{id:"defining-a-function",children:"Defining a function"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"returnType functionName(parameter1Type parameter1Name, parameter2Type parameter2Name, ...) {\n    // Code to be executed\n    return value; // Optional, if returnType is not void\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In the syntax above, ",(0,o.jsx)(n.code,{children:"returnType"})," refers to the data type of the value which is to be returned by the function. If no value is to be returned, the ",(0,o.jsx)(n.code,{children:"returnType"})," is ",(0,o.jsx)(n.code,{children:"void"}),". For instance, we can program our own function to turn on an LED:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"void turnOnLED() {\n  digitalWrite(2, HIGH);\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"calling-a-function",children:"Calling a function"}),"\n",(0,o.jsx)(n.p,{children:"We can then call a function using the following syntax:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"functionName(argument1, argument2);\n\nturnOnLED(); // calls the turnOnLED() function\n"})}),"\n",(0,o.jsx)(n.h2,{id:"scope",children:"Scope"}),"\n",(0,o.jsxs)(n.p,{children:["All the variables we create have a property known as the ",(0,o.jsx)(n.strong,{children:"scope"}),". This means that there are two different types of scopes for variables:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Global"})," variables are declared outside all functions and can be used anywhere in your program"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Local"})," variables are delcared inside functions, and these variables can only be used within that function."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"For instance, consider this sketch:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"int ledPin = 13; // Global variable\n\nvoid setup() {\n    pinMode(ledPin, OUTPUT);\n}\n\nvoid loop() {\n  int delayTime = 500; // Local variable\n  digitalWrite(ledPin, HIGH);\n  delay(delayTime);\n  digitalWrite(ledPin, LOW);\n  delay(delayTime);\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"assignment",children:"Assignment"}),"\n",(0,o.jsx)(n.admonition,{title:"Your Turn",type:"info",children:(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Create two functions:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"dotBlink()"})," - turns an LED on for 200ms, then off for 200ms."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"dashBlink()"})," - turns an LED on for 600ms, then off for 200ms."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Use these functions blink out your name in Morse code using an LED. For example, if your name is ",(0,o.jsx)(n.code,{children:"John"}),", convert each letter to Morse code using ",(0,o.jsx)(n.a,{href:"https://rsgb.org/main/files/2012/10/Morse_Code_Sheet_01.pdf",children:"this chart"})," and blink it out using combinations of the functions you created."]}),"\n"]})}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"This section includes links to help you dive deeper into the topics from this lesson. It's optional, so don't worry if you choose to skip it."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://docs.arduino.cc/learn/programming/functions/",children:"Check out the official documentation on functions"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);
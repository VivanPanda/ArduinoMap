"use strict";(self.webpackChunkarduinomap=self.webpackChunkarduinomap||[]).push([[733],{3082:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/blink-d6dde559246d99045af9bd2cd7f1f5db.png"},3103:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/verify-upload-0334b574f3e3275726f6b511725ef138.png"},8151:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"week-0/programming-basics","title":"Basic Programming","description":"Our microcontroller can\'t program itself. Therefore, we need to communicate with our Arduino board using programmed instructions written in a variant of the C++ programming language.","source":"@site/docs/week-0/programming-basics.md","sourceDirName":"week-0","slug":"/week-0/programming-basics","permalink":"/arduinomap/week-0/programming-basics","draft":false,"unlisted":false,"editUrl":"https://github.com/vivanpanda/arduinomap/tree/main/docs/week-0/programming-basics.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Tools of the Trade","permalink":"/arduinomap/week-0/tools-of-the-trade"},"next":{"title":"Basic Electrical Skills","permalink":"/arduinomap/week-0/electrical-skills"}}');var s=r(4848),t=r(8453);const o={sidebar_position:3},d="Basic Programming",l={},a=[{value:"Writing your first sketch",id:"writing-your-first-sketch",level:2},{value:"Blinking the on-board LED",id:"blinking-the-on-board-led",level:2},{value:"Variables",id:"variables",level:2},{value:"Defining variables",id:"defining-variables",level:3},{value:"Assigning a value to a variable",id:"assigning-a-value-to-a-variable",level:3},{value:"Comments",id:"comments",level:2},{value:"Operators",id:"operators",level:2},{value:"Arithmetic operators",id:"arithmetic-operators",level:3},{value:"Comparison operators",id:"comparison-operators",level:3},{value:"Logical operators",id:"logical-operators",level:3},{value:"Assignment",id:"assignment",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"basic-programming",children:"Basic Programming"})}),"\n",(0,s.jsxs)(n.p,{children:["Our microcontroller can't program itself. Therefore, we need to communicate with our Arduino board using programmed instructions written in a variant of the ",(0,s.jsx)(n.code,{children:"C++"})," programming language."]}),"\n",(0,s.jsx)(n.h2,{id:"writing-your-first-sketch",children:"Writing your first sketch"}),"\n",(0,s.jsx)(n.p,{children:"If you open a new sketch using the Arduino IDE, you will be faced with this boilerplate that contains two functions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"void setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"void setup()"})," - This function executes only once when the Arduino board is reset. You should program  configurations here that are intended to run ",(0,s.jsx)(n.strong,{children:"once"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"void loop()"})," - This function executes continuously, as ",(0,s.jsx)(n.code,{children:"loop"})," implies. You should program tasks here that run repeatedly. For example, reading data from sensors."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"blinking-the-on-board-led",children:"Blinking the on-board LED"}),"\n",(0,s.jsxs)(n.p,{children:["We will use an example sketch to blink the on-board LED on your Arduino microcontroller. From the menu, open the ",(0,s.jsx)(n.code,{children:"Blink"})," example as shown below."]}),"\n",(0,s.jsx)("div",{class:"img-center",children:(0,s.jsx)(n.img,{alt:"Selecting the blink sketch",src:r(3082).A+"",width:"1596",height:"1498"})}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:"You should be able to see this sketch:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);  // turn the LED on (HIGH is the voltage level)\n  delay(1000);                      // wait for a second \n  digitalWrite(LED_BUILTIN, LOW);   // turn the LED off by making the voltage LOW\n  delay(1000);                      // wait for a second\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now, plug in your Arduino board into your computer using the USB lead and select your microcontroller to establish a connection."}),"\n",(0,s.jsxs)("div",{class:"img-center",children:[(0,s.jsx)(n.img,{alt:"Verify and upload",src:r(3103).A+"",width:"934",height:"628"})," "]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:"Notice you have two buttons in your IDE:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Verify"})," - Tells the IDE to check the code for syntax errors, compiles the sketch into machine code (binary), and reports any errors in the console."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Upload"})," - Performs the ",(0,s.jsx)(n.code,{children:"Verify"})," step, followed by sending the binary code to the Arduino board."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Verify"})," tool can be useful to check your syntax for any errors without having to upload your sketch to your microcontroller."]})}),"\n",(0,s.jsxs)(n.p,{children:["Click on the ",(0,s.jsx)(n.code,{children:"Upload"})," button to send your code over to your Arduino board. Once the sketch has been uploaded, you should see the yellow on-board LED start to blink. Congratulations!"]}),"\n",(0,s.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"defining-variables",children:"Defining variables"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"variable_datatype variable_name;\nint myNum;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"assigning-a-value-to-a-variable",children:"Assigning a value to a variable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"variable_name = value;\nmyNum = 10;\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://learn.sparkfun.com/tutorials/data-types-in-arduino/defining-data-types",children:"This article"})," showcases some of the commonly used datatypes."]}),"\n",(0,s.jsx)(n.h2,{id:"comments",children:"Comments"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"// We can write comments using the two forward slashes\n// Comments are ignored by the compiler and allow us to make our programs more maintable and easier to understand\n"})}),"\n",(0,s.jsx)(n.h2,{id:"operators",children:"Operators"}),"\n",(0,s.jsx)(n.h3,{id:"arithmetic-operators",children:"Arithmetic operators"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Operator"}),(0,s.jsx)(n.th,{children:"Symbol"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Addition"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"+"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Subtraction"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"-"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Multiplication"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"*"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Division"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Remainder"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"%"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"comparison-operators",children:"Comparison operators"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Operator"}),(0,s.jsx)(n.th,{children:"Symbol"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Greater than"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:">"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Less than"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Greater than or equal to"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:">="})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Less than or equal to"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<="})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Equal to"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"=="})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Not equal to"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"!="})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"logical-operators",children:"Logical operators"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Operator"}),(0,s.jsx)(n.th,{children:"Symbol"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"OR"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"||"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"AND"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"&&"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"NOT"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"!"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"assignment",children:"Assignment"}),"\n",(0,s.jsx)(n.admonition,{title:"Your Turn",type:"info",children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Remember the ",(0,s.jsx)(n.code,{children:"Blink"})," example sketch from earlier? Re-open it, but this time, change the ",(0,s.jsx)(n.code,{children:"delay"})," to 500 milliseconds. Use a variable to store this delay time and ensure you have meaningful comments where applicable. If stuck, read the ",(0,s.jsxs)(n.a,{href:"https://docs.arduino.cc/language-reference/en/functions/time/delay/",children:["documentation for the ",(0,s.jsx)(n.code,{children:"delay()"})," function here"]}),"."]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"This section includes links to help you dive deeper into the topics from this lesson. It's optional, so don't worry if you choose to skip it."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Check out ",(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=vyxsg4Fc6Vg",children:"this great summary video on data types for variables."})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>d});var i=r(6540);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);